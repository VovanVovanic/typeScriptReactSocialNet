{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/DialogsList/DialogsList.module.css","components/Dialogs/Messages/AddMessageForm.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Messages/MessagesContainer.ts","redux/actions/messages.ts","components/Dialogs/DialogsList/DialogsList.tsx","components/Dialogs/DialogsList/DialogListContainer.ts","components/Dialogs/Dialogs.tsx"],"names":["module","exports","max","maxLength","AddMessageForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","TextArea","name","validate","required","Messages","messages","onMessageFormSubmit","msgList","map","i","label","key","to","className","classes","values","newMessageText","MessagesContainer","connect","state","dialogs","value","type","ADD_MESSAGE","DialogsList","userRoutes","users","DialogsListContainer","compose","withAuthRedirect","Dialogs"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,0B,oBCA5BD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,uICQ5BC,EAAMC,YAAU,IAmBLC,EAHQC,YAA2B,CAChDC,KAAM,eADeD,EAfoC,SAAC,GAEhD,IADVE,EACS,EADTA,aAEA,OACE,0BAAMC,SAAUD,GACd,kBAACE,EAAA,EAAD,CACEC,YAAY,oBACZC,UAAWC,IACXC,KAAK,iBACLC,SAAU,CAACC,IAAUb,KAEvB,gD,kBCgBSc,EAzB6B,SAAC,GAItC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,oBAGMC,EAAUF,EAASG,KAAI,WAAYC,GAAO,IAAhBC,EAAe,EAAfA,MAC9B,OACE,wBAAIC,IAAKF,GACP,kBAAC,IAAD,CAAMG,GAAK,KAAKF,OAStB,OACE,oCACE,wBAAIG,UAAWC,IAAQV,UAAWG,GAClC,kBAAC,EAAD,CAAgBX,SAPC,SAACmB,GACpBT,EAAoBS,EAAOC,qBCLhBC,EADWC,aANJ,SAACC,GACrB,MAAO,CACLd,SAAUc,EAAMC,QAAQf,YAIyE,CAACC,oBCXnE,SAACe,GAChC,MAAO,CAAEC,KAAMC,IAAaF,WDUNH,CAAmGd,G,iCEC9GoB,EAZoC,SAAC,GAAe,IAC3DC,EAD0D,EAAZC,MAC3BlB,KAAI,WAAYC,GAAO,IAAhBC,EAAe,EAAfA,MAC9B,OACE,wBAAIC,IAAKF,GACP,kBAAC,IAAD,CAAMG,GAAE,mBAAcH,IAAMC,OAKlC,OAAO,wBAAIG,UAAWC,IAAQU,aAAcC,ICK/BE,EAJcC,YAC3BV,aARoB,SAACC,GACrB,MAAO,CACLO,MAAOP,EAAMC,QAAQM,UAOvBG,IAF2BD,CAG3BJ,GCTaM,UARC,WACd,OACE,yBAAKjB,UAAWC,IAAQgB,SACtB,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"static/js/3.fd7633a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialog_Dialogs__22nJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__3Yj6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogsList\":\"DialogsList_DialogsList__3q0A_\"};","import React from 'react'\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { maxLength, required } from '../../../utils/validators';\r\nimport { TextArea } from '../../common/formControls';\r\n\r\n\r\nexport type MessageDataType = {\r\n  newMessageText: string\r\n}\r\nlet max = maxLength(50)\r\nconst AddM: React.FC<InjectedFormProps<MessageDataType>> = ({\r\n  handleSubmit,\r\n}: any) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field\r\n        placeholder=\"type your message\"\r\n        component={TextArea}\r\n        name=\"newMessageText\"\r\n        validate={[required, max]}\r\n      />\r\n      <button>add post</button>\r\n    </form>\r\n  );\r\n};\r\nconst AddMessageForm = reduxForm<MessageDataType>({\r\n  form: \"messageForm\",\r\n})(AddM);\r\nexport default AddMessageForm","\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { messagesType } from \"../../../redux/reducers/dialogs\";\r\nimport AddMessageForm, { MessageDataType } from \"./AddMessageForm\";\r\nimport classes from \"./Messages.module.css\";\r\n\r\ntype MessagePropsType = {\r\n  messages: messagesType;\r\n  onMessageFormSubmit: (value:string) => void\r\n  \r\n};\r\nconst Messages:React.FC<MessagePropsType> = ({\r\n  messages,\r\n  onMessageFormSubmit,\r\n\r\n}) => {\r\n  const msgList = messages.map(({ label }, i) => {\r\n    return (\r\n      <li key={i}>\r\n        <Link to = '/'>{label}</Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const onFormSubmit = (values: MessageDataType) => {\r\n    onMessageFormSubmit(values.newMessageText);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul className={classes.Messages}>{msgList}</ul>\r\n      <AddMessageForm onSubmit={onFormSubmit}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n\r\n\r\n\r\n\r\n","\r\nimport { onMessageFormSubmit} from \"../../../redux/actions/messages\";\r\nimport { connect } from 'react-redux'\r\nimport Messages from './Messages'\r\nimport { RootStateType } from \"../../../redux/reduxStore\";\r\nimport { messagesType} from \"../../../redux/reducers/dialogs\";\r\n\r\ntype MapStateType = {\r\n  messages: messagesType\r\n}\r\ntype MapDispatchType = {\r\n  onMessageFormSubmit: (value:string) => void\r\n}\r\n\r\nlet mapStateToProps = (state:RootStateType):MapStateType => {\r\n  return {\r\n    messages: state.dialogs.messages,\r\n\r\n  }\r\n}\r\nconst MessagesContainer = connect<MapStateType, MapDispatchType, {}, RootStateType>(mapStateToProps, {onMessageFormSubmit} )(Messages);\r\nexport default MessagesContainer ","\r\nimport {ADD_MESSAGE} from \"./types\";\r\n\r\n\r\nexport type onMessageFormSubmitType = ReturnType<typeof onMessageFormSubmit>\r\n\r\n\r\nexport type dialogsType = onMessageFormSubmitType \r\n\r\nexport const onMessageFormSubmit = (value: string) => {\r\n    return { type: ADD_MESSAGE, value } as const\r\n}\r\n\r\n","\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { usersType } from \"../../../redux/reducers/dialogs\";\r\nimport classes from \"./DialogsList.module.css\";\r\n\r\nexport type DialogsListPropsType = {\r\n  users: usersType;\r\n};\r\nconst DialogsList:React.FC<DialogsListPropsType> = ({ users }) => {\r\n  const userRoutes = users.map(({ label }, i) => {\r\n    return (\r\n      <li key={i}>\r\n        <Link to={`/dialogs/${i}`}>{label}</Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className={classes.DialogsList}>{userRoutes}</ul>;\r\n};\r\n\r\nexport default DialogsList;","\r\nimport { ComponentType } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { usersType } from '../../../redux/reducers/dialogs'\r\nimport { RootStateType } from '../../../redux/reduxStore'\r\nimport { withAuthRedirect } from '../../hoc/authRedirect'\r\nimport DialogsList from './DialogsList'\r\n\r\ntype MapStateType = {\r\n  users: usersType\r\n}\r\nlet mapStateToProps = (state:RootStateType):MapStateType => {\r\n  return {\r\n    users: state.dialogs.users\r\n  }\r\n}\r\n\r\n\r\nconst DialogsListContainer = compose<ComponentType>(\r\n  connect<MapStateType, {}, {}, RootStateType>(mapStateToProps),\r\n  withAuthRedirect\r\n)(DialogsList)\r\nexport default DialogsListContainer","import React from \"react\";\r\nimport classes from \"./Dialog.module.css\";\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\nimport DialogsListContainer from \"./DialogsList/DialogListContainer\";\r\n\r\nconst Dialogs = () => {\r\n  return (\r\n    <div className={classes.Dialogs}>\r\n      <DialogsListContainer />\r\n      <MessagesContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n"],"sourceRoot":""}