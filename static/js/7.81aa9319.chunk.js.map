{"version":3,"sources":["components/Users/Users.module.css","redux/actions/users.ts","components/Users/users.tsx","components/Users/usersGetRequest.tsx","components/Users/UsersContainer.ts"],"names":["module","exports","usersActions","id","type","FOLLOW","NOFOLLOW","users","SET__USERS","page","SET__PAGE","total","SET__TOTAL","pagination","SET__PAGINATION","isFetching","TOGGLE__PRELOADER","isFetchingFollow","userId","TOGGLE_FOLLOW_STATUS","Users","nofollowUser","followUser","pages","onPageSet","setPagination","followInProgress","pageLinkCount","Math","ceil","pagesList","i","pageLink","className","classes","onClick","push","visiblePages","splice","paginationHandler","dir","userList","map","name","photos","followed","status","UsersItem","key","to","Img","src","small","Ava","alt","Buttons","disabled","some","el","Content","Address","UsersGetRequest","this","props","getUsers","initialPage","setPage","usersProps","React","Component","UsersContainer","compose","connect","state","pageCount","initialPagination","dispatch","followThisUser","then","data","resultCode","console","log","noFollowThisUser","pageNumber","getItems","totalCount","items","withAuthRedirect"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,IAAM,mBAAmB,QAAU,uBAAuB,QAAU,uBAAuB,QAAU,uBAAuB,SAAW,0B,0ECmB9MC,EACC,SAACC,GACX,MAAO,CAAEC,KAAMC,IAAQF,GAAIA,IAFlBD,EAIG,SAACC,GACb,MAAO,CAAEC,KAAME,IAAUH,GAAIA,IALpBD,EAOD,SAACK,GACT,MAAO,CAAEH,KAAMI,IAAYD,MAAOA,IARzBL,EAUF,SAACO,GACR,MAAO,CAAEL,KAAMM,IAAWD,SAXjBP,EAaD,SAACS,GACT,MAAO,CAAEP,KAAMQ,IAAYD,UAdlBT,EAgBI,SAACW,GACd,MAAO,CAAET,KAAMU,IAAiBD,eAjBvBX,EAmBM,SAACa,GAChB,MAAO,CAAEX,KAAMY,IAAmBD,eApBzBb,EAsBU,SAACe,EAA2BC,GAC/C,MAAO,CAAEd,KAAMe,IAAsBF,mBAAkBC,W,4GCgE5CE,EAvF0B,SAAC,GAexC,IAJK,IAVLb,EAUI,EAVJA,MACAc,EASI,EATJA,aACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,UACAb,EAKI,EALJA,MACAE,EAII,EAJJA,WACAY,EAGI,EAHJA,cACAC,EAEI,EAFJA,iBAGIC,EAAgBC,KAAKC,KAAKlB,EAAQY,GAClCO,EAAY,GAFZ,WAIKC,GACP,IAAIC,EACF,0BAAMC,UAAWC,IAAQF,SAAUG,QAAS,kBAAMX,EAAUO,KACzDA,GAGLD,EAAUM,KAAKJ,IANRD,EAAI,EAAGA,GAAKJ,EAAeI,IAAM,EAAjCA,GAST,IAAIM,EAAe,UAAIP,GAAWQ,OAAOzB,EAAY,IAE/C0B,EAAoB,SAACC,GACb,SAARA,GACFf,EAAcZ,EAAa,IAGjB,YAAR2B,GACFf,EAAcZ,EAAa,KAIzB4B,EAAWlC,EAAMmC,KAAI,YAA6C,IAA1CC,EAAyC,EAAzCA,KAAMxC,EAAmC,EAAnCA,GAAIyC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACxD,OACE,wBAAIb,UAAWC,IAAQa,UAAWC,IAAK7C,GACrC,kBAAC,IAAD,CAAS8C,GAAI,YAAc9C,GACzB,yBACE8B,UAAWC,IAAQgB,IACnBC,IAAKP,EAAOQ,MAAQR,EAAOQ,MAAQC,IACnCC,IAAK,SAIT,yBAAKrB,UAAWC,IAAQqB,SACpBV,EAQA,4BACEW,SAAU9B,EAAiB+B,MAAK,SAACC,GAAD,OAAQA,IAAOvD,KAC/CgC,QAAS,kBAAMd,EAAalB,KAF9B,YAPA,4BACEqD,SAAU9B,EAAiB+B,MAAK,SAACC,GAAD,OAAQA,IAAOvD,KAC/CgC,QAAS,kBAAMb,EAAWnB,KAF5B,WAeJ,yBAAK8B,UAAWC,IAAQyB,SACtB,4BAAKhB,GACL,6BAAMG,IAER,yBAAKb,UAAWC,IAAQ0B,SACtB,6BAAM,WACN,6BAAM,aAKd,OACE,yBAAK3B,UAAWC,IAAQd,OACtB,qCACA,4BAAKqB,GACL,6BACE,4BAAQN,QAAS,kBAAMI,EAAkB,UAAzC,QACCF,EACD,4BAAQF,QAAS,kBAAMI,EAAkB,aAAzC,c,QClFasB,E,kLAGjBC,KAAKC,MAAMC,SAASF,KAAKC,MAAME,e,+BAGvB,IAAD,SACyCH,KAAKC,MAA7CG,EADD,EACCA,QAASnD,EADV,EACUA,WAAgBoD,EAD1B,wCAaP,OANoBpD,EAClB,kBAAC,IAAD,MAEA,kBAAC,EAAD,eAAOS,UARS,SAACf,GACjByD,EAAQzD,GACR,EAAKsD,MAAMC,SAASvD,KAMa0D,Q,GAhBMC,IAAMC,WCV5CH,EAAyBhE,EAAjBuB,EAAiBvB,EAgC1BoE,EAAiBC,YACtBC,aAdqB,SAACC,GACrB,MAAO,CACLlE,MAAOkE,EAAMlE,MAAMA,MACnBgB,MAAOkD,EAAMlE,MAAMmE,UACnBT,YAAaQ,EAAMlE,MAAM0D,YACzBtD,MAAO8D,EAAMlE,MAAMI,MACnBE,WAAY4D,EAAMlE,MAAMoE,kBACxB5D,WAAY0D,EAAMlE,MAAMQ,WACxBW,iBAAkB+C,EAAMlE,MAAMmB,oBAM0C,CAC1EJ,WHewB,SAACnB,GACzB,OAAO,SAACyE,GACNA,EAAS1E,GAAiC,EAAMC,IAChD0E,YAAe1E,GAAI2E,MAAK,SAACC,GACC,IAApBA,EAAKC,aACPC,QAAQC,IAAIH,EAAKA,MAEjBH,EAAS1E,EAAwBC,KAEnCyE,EAAS1E,GAAiC,EAAOC,SGvBrDkB,aH2B0B,SAAClB,GAC3B,OAAO,SAACyE,GACNA,EAAS1E,GAAiC,EAAMC,IAChDgF,YAAiBhF,GAAI2E,MAAK,SAACC,GACD,IAApBA,EAAKC,YACPJ,EAAS1E,EAA0BC,IAErCyE,EAAS1E,GAAiC,EAAOC,SGjCrD+D,UACAF,SHCsB,SAACoB,GACvB,OAAO,SAACR,GACNA,EAAS1E,GAA6B,IACtCmF,YAASD,GACNN,MAAK,SAACC,GACLH,EAAS1E,EAAsB6E,EAAKO,aACpCV,EAAS1E,EAAsB6E,EAAKQ,QACpCX,EAAS1E,GAA6B,SGP5CuB,kBAEA+D,IARqBjB,CASrBV,GACaS","file":"static/js/7.81aa9319.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__24UPi\",\"UsersItem\":\"Users_UsersItem__28izy\",\"Img\":\"Users_Img__zzWN5\",\"Buttons\":\"Users_Buttons__34myk\",\"Content\":\"Users_Content__2NHVS\",\"Address\":\"Users_Address__16RJi\",\"pageLink\":\"Users_pageLink__1jW0F\"};","\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { followThisUser, getItems, noFollowThisUser } from \"../../api/api\";\r\nimport { UsersType } from \"../reducers/users\";\r\nimport { RootStateType } from \"../reduxStore\";\r\nimport {\r\n  FOLLOW,\r\n  NOFOLLOW,\r\n  SET__USERS,\r\n  SET__PAGE,\r\n  SET__TOTAL,\r\n  SET__PAGINATION,\r\n  TOGGLE__PRELOADER,\r\n  TOGGLE_FOLLOW_STATUS,\r\n} from \"./types\";\r\n\r\ntype auxiliaryType<T> = T extends { [key: string]: infer actionType } ? actionType : never\r\nexport type usersActionType = ReturnType<auxiliaryType<typeof usersActions>>\r\n\r\n\r\nexport const usersActions = {\r\n  followUser: (id: number) => {\r\n    return { type: FOLLOW, id: id } as const;\r\n  },\r\n  nofollowUser: (id: number) => {\r\n    return { type: NOFOLLOW, id: id } as const;\r\n  },\r\n  setUsers: (users: UsersType) => {\r\n    return { type: SET__USERS, users: users } as const;\r\n  },\r\n  setPage: (page: number) => {\r\n    return { type: SET__PAGE, page } as const;\r\n  },\r\n  setTotal: (total: number) => {\r\n    return { type: SET__TOTAL, total } as const;\r\n  },\r\n  setPagination: (pagination: number) => {\r\n    return { type: SET__PAGINATION, pagination } as const;\r\n  },\r\n  togglePreloader: (isFetching: boolean) => {\r\n    return { type: TOGGLE__PRELOADER, isFetching } as const;\r\n  },\r\n  triggerFollowStatus: (isFetchingFollow: boolean, userId: number) => {\r\n    return { type: TOGGLE_FOLLOW_STATUS, isFetchingFollow, userId } as const\r\n  }\r\n}\r\n\r\n\r\nexport const getUsers = (pageNumber: number): ThunkAction<void, RootStateType, unknown, usersActionType> => {\r\n  return (dispatch) => {\r\n    dispatch(usersActions.togglePreloader(true))\r\n    getItems(pageNumber)\r\n      .then((data) => {\r\n        dispatch(usersActions.setTotal(data.totalCount));\r\n        dispatch(usersActions.setUsers(data.items))\r\n        dispatch(usersActions.togglePreloader(false))\r\n      });\r\n  }\r\n}\r\nexport const followUser = (id: number): ThunkAction<void, RootStateType, unknown, usersActionType> => {\r\n  return (dispatch) => {\r\n    dispatch(usersActions.triggerFollowStatus(true, id));\r\n    followThisUser(id).then((data) => {\r\n      if (data.resultCode === 0) {\r\n        console.log(data.data);\r\n        \r\n        dispatch(usersActions.followUser(id));\r\n      }\r\n      dispatch(usersActions.triggerFollowStatus(false, id));\r\n    })\r\n  }\r\n}\r\nexport const nofollowUser = (id: number): ThunkAction<void, RootStateType, unknown, usersActionType> => {\r\n  return (dispatch) => {\r\n    dispatch(usersActions.triggerFollowStatus(true, id));\r\n    noFollowThisUser(id).then((data) => {\r\n      if (data.resultCode === 0) {\r\n        dispatch(usersActions.nofollowUser(id));\r\n      }\r\n      dispatch(usersActions.triggerFollowStatus(false, id));\r\n    })\r\n  }\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Ava from \"../../assets/images/ava.gif\";\r\nimport { UsersType } from \"../../redux/reducers/users\";\r\nimport classes from \"./Users.module.css\";\r\n\r\n\r\ntype UsersPropsTypes = {\r\n  users: UsersType;\r\n  pages: number;\r\n  initialPage: number;\r\n  total: number;\r\n  pagination: number;\r\n  followUser: (id: number) => void;\r\n  nofollowUser: (id: number) => void;\r\n  setPagination: (pagination: number) => void;\r\n  onPageSet: (i: number) => void;\r\n  followInProgress: Array<number>\r\n};\r\nconst Users: React.FC<UsersPropsTypes> = ({\r\n  users,\r\n  nofollowUser,\r\n  followUser,\r\n  pages,\r\n  onPageSet,\r\n  total,\r\n  pagination,\r\n  setPagination,\r\n  followInProgress\r\n  \r\n}) => {\r\n  let pageLinkCount = Math.ceil(total / pages);\r\n  let pagesList = [];\r\n\r\n  for (let i = 1; i <= pageLinkCount; i++) {\r\n    let pageLink = (\r\n      <span className={classes.pageLink} onClick={() => onPageSet(i)}>\r\n        {i}\r\n      </span>\r\n    );\r\n    pagesList.push(pageLink);\r\n  }\r\n\r\n  let visiblePages = [...pagesList].splice(pagination, 10);\r\n\r\n  const paginationHandler = (dir: string) => {\r\n    if (dir === \"back\") {\r\n      setPagination(pagination - 10);\r\n    }\r\n\r\n    if (dir === \"forward\") {\r\n      setPagination(pagination + 10);\r\n    }\r\n  };\r\n\r\n  const userList = users.map(({ name, id, photos, followed, status }) => {\r\n    return (\r\n      <li className={classes.UsersItem} key={id}>\r\n        <NavLink to={\"/profile/\" + id}>\r\n          <img\r\n            className={classes.Img}\r\n            src={photos.small ? photos.small : Ava}\r\n            alt={\"Ava\"}\r\n          />\r\n        </NavLink>\r\n\r\n        <div className={classes.Buttons}>\r\n          {!followed ? (\r\n            <button\r\n              disabled={followInProgress.some((el) => el === id)}\r\n              onClick={() => followUser(id)}\r\n            >\r\n              Follow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followInProgress.some((el) => el === id)}\r\n              onClick={() => nofollowUser(id)}\r\n            >\r\n              Nofollow\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className={classes.Content}>\r\n          <h4>{name}</h4>\r\n          <div>{status}</div>\r\n        </div>\r\n        <div className={classes.Address}>\r\n          <div>{\"country\"}</div>\r\n          <div>{\"city\"}</div>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div className={classes.Users}>\r\n      <h2>Users</h2>\r\n      <ul>{userList}</ul>\r\n      <div>\r\n        <button onClick={() => paginationHandler(\"back\")}>back</button>\r\n        {visiblePages}\r\n        <button onClick={() => paginationHandler(\"forward\")}>forward</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Users;\r\n","import React from \"react\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../Preloader/preloader\";\r\nimport { UsersType } from \"../../redux/reducers/users\";\r\n\r\ntype PropsType = {\r\n  users: UsersType;\r\n  pages: number;\r\n  initialPage: number;\r\n  isFetching: boolean; //\r\n  total: number;\r\n  pagination: number;\r\n  followUser: (id: number) => void;\r\n  nofollowUser: (id: number) => void;\r\n  setPagination: (pagination: number) => void;//\r\n  setPage: (page: number) => void; //\r\n  getUsers: (page: number) => void; //\r\n  followInProgress: Array<number>;\r\n};\r\n\r\nexport default class UsersGetRequest extends React.Component<PropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.initialPage);\r\n  }\r\n\r\n  render() {\r\n    const { setPage, isFetching,  ...usersProps } = this.props;\r\n    const onPageSet = (page: number) => {\r\n      setPage(page);\r\n      this.props.getUsers(page);\r\n    };\r\n\r\n    let loadedContent = isFetching ? (\r\n      <Preloader />\r\n    ) : (\r\n      <Users onPageSet={onPageSet} {...usersProps} />\r\n    );\r\n\r\n    return loadedContent;\r\n  }\r\n}\r\n","import { ComponentType } from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { usersActions, getUsers, followUser, nofollowUser,}from \"../../redux/actions/users\";\r\nimport { UsersType } from \"../../redux/reducers/users\";\r\nimport { RootStateType } from \"../../redux/reduxStore\";\r\nimport { withAuthRedirect } from \"../hoc/authRedirect\";\r\nimport UsersGetRequest from \"./usersGetRequest\";\r\n\r\nconst {setPage,setPagination} = usersActions\r\n\r\n\r\nexport type MapStateType = {\r\n  users: UsersType\r\n  pages: number\r\n  initialPage: number\r\n  total: number\r\n  pagination: number\r\n  isFetching: boolean\r\n  followInProgress: Array<number>\r\n}\r\nexport type MapDispatchType = {\r\n  followUser: (id: number) => void\r\n  nofollowUser: (id: number) => void\r\n  setPage: (page: number) => void\r\n  getUsers: (page: number) => void\r\n  setPagination: (pagination: number) => void\r\n}\r\nlet mapStateToProps = (state: RootStateType):MapStateType => {\r\n  return {\r\n    users: state.users.users,\r\n    pages: state.users.pageCount,\r\n    initialPage: state.users.initialPage,\r\n    total: state.users.total,\r\n    pagination: state.users.initialPagination,\r\n    isFetching: state.users.isFetching,\r\n    followInProgress: state.users.followInProgress\r\n  };\r\n}\r\n\r\n\r\nconst UsersContainer = compose<ComponentType>(\r\n connect<MapStateType, MapDispatchType, {}, RootStateType>(mapStateToProps, {\r\n  followUser,\r\n  nofollowUser,\r\n  setPage,\r\n  getUsers,\r\n  setPagination,\r\n}),\r\n  withAuthRedirect\r\n)(UsersGetRequest)\r\nexport default UsersContainer\r\n\r\n"],"sourceRoot":""}